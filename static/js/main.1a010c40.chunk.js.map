{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","state","position","switchPosition","direction","props","images","itemWidth","step","frameSize","infinite","pos","isEnd","length","Math","max","min","setState","this","animationDuration","className","style","width","transition","transform","map","img","name","slice","height","src","alt","type","onClick","disabled","React","Component","App","getSettingsFromForm","form","document","querySelector","data","FormData","entries","forEach","inputName","value","prevState","id","htmlFor","onChange","checked","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.1a010c40.chunk.js","sourcesContent":["import React from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[];\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n  step: number;\n  infinite: boolean;\n};\n\ntype State = {\n  position: number;\n};\n\nclass Carousel extends React.Component<Props, State> {\n  state: Readonly<State> = {\n    position: 0, // position of our scroll bar\n  };\n\n  switchPosition = (direction: string) => {\n    const {\n      images,\n      itemWidth,\n      step,\n      frameSize,\n      infinite,\n    } = this.props;\n\n    const { position } = this.state;\n    let pos = position;\n    const isEnd = -itemWidth * (images.length - frameSize);\n\n    if (direction === 'next') {\n      pos -= itemWidth * step;\n      pos = Math.max(pos, isEnd);\n\n      if (infinite && this.state.position === isEnd) {\n        pos = 0;\n      }\n    }\n\n    if (direction === 'prev') {\n      pos += itemWidth * step;\n      pos = Math.min(pos, 0);\n\n      if (infinite && this.state.position === 0) {\n        pos = isEnd;\n      }\n    }\n\n    this.setState({ position: pos });\n  };\n\n  render() {\n    const {\n      images,\n      itemWidth,\n      frameSize,\n      infinite,\n      animationDuration,\n    } = this.props;\n\n    const { position } = this.state;\n    const isEnd = -itemWidth * (images.length - frameSize);\n\n    return (\n      <div\n        className=\"Carousel\"\n        style={{ width: `${itemWidth * frameSize}px` }}\n      >\n        <ul\n          className=\"Carousel__list\"\n          style={{\n            transition: `${animationDuration}ms`,\n            transform: `translateX(${position}px)`,\n            width: `${itemWidth * images.length}px`,\n          }}\n        >\n          {images.map(img => {\n            const name = img.slice(-5, -4);\n\n            return (\n              <li\n                style={{ height: `${itemWidth}px`, width: `${itemWidth}px` }}\n                key={name}\n                className=\"Carousel__item\"\n              >\n                <img\n                  src={img}\n                  alt={name}\n                  height={`${itemWidth}px`}\n                />\n              </li>\n            );\n          })}\n        </ul>\n\n        <div className=\"button__wrapper\">\n          <button\n            className=\"button prev\"\n            type=\"button\"\n            onClick={() => this.switchPosition('prev')}\n            disabled={position === 0 && !infinite}\n          >\n            Prev\n          </button>\n\n          <button\n            className=\"button next\"\n            type=\"button\"\n            onClick={() => this.switchPosition('next')}\n            data-cy=\"next\"\n            disabled={position === isEnd && !infinite}\n          >\n            Next\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\ninterface Field {\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n  infinite: boolean;\n  step: number;\n}\ninterface State extends Field {\n  images: string[];\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    frameSize: 3,\n    animationDuration: 1000,\n    step: 3,\n    itemWidth: 130,\n    infinite: false,\n  };\n\n  getSettingsFromForm = () => {\n    const form = document\n      .querySelector('#form') as HTMLFormElement;\n\n    const data = new FormData(form);\n\n    [...data.entries()].forEach(([inputName, value]) => {\n      this.setState((prevState) => ({\n        ...prevState,\n        [inputName]: value,\n      }));\n    });\n  };\n\n  render() {\n    const {\n      images,\n      animationDuration,\n      itemWidth,\n      step,\n      frameSize,\n      infinite,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"title\" data-cy=\"title\">\n          {`Carousel with ${images.length} images`}\n        </h1>\n\n        <form id=\"form\" className=\"form\">\n          <div className=\"form__field\">\n            <label htmlFor=\"itemWidth\" className=\"form__label\">\n              Item width\n            </label>\n\n            <span>{itemWidth}</span>\n\n            <input\n              type=\"range\"\n              name=\"itemWidth\"\n              id=\"itemWidth\"\n              max=\"300\"\n              value={itemWidth}\n              min=\"50\"\n              onChange={this.getSettingsFromForm}\n            />\n          </div>\n\n          <div className=\"form__field\">\n            <label htmlFor=\"frameSize\" className=\"form__label\">\n              Frame Size\n            </label>\n\n            <span>{frameSize}</span>\n\n            <input\n              type=\"range\"\n              name=\"frameSize\"\n              id=\"frameSize\"\n              min=\"1\"\n              max=\"5\"\n              value={frameSize}\n              onChange={this.getSettingsFromForm}\n            />\n          </div>\n\n          <div className=\"form__field\">\n            <label htmlFor=\"step\" className=\"form__label\">\n              Step\n            </label>\n\n            <span>{step}</span>\n\n            <input\n              type=\"range\"\n              name=\"step\"\n              id=\"step\"\n              min=\"1\"\n              max=\"5\"\n              value={step}\n              onChange={this.getSettingsFromForm}\n            />\n          </div>\n\n          <div className=\"form__field\">\n            <label htmlFor=\"animationDuration\" className=\"form__label\">\n              Animation Duration\n            </label>\n\n            <span>{animationDuration}</span>\n\n            <input\n              type=\"range\"\n              name=\"animationDuration\"\n              id=\"animationDuration\"\n              max=\"3000\"\n              min=\"500\"\n              value={animationDuration}\n              onChange={this.getSettingsFromForm}\n            />\n          </div>\n\n          <div className=\"form__field\">\n            <label htmlFor=\"infinite\">\n              infinite\n            </label>\n\n            <input\n              id=\"infinite\"\n              name=\"infinite\"\n              type=\"checkbox\"\n              checked={infinite}\n              onChange={() => this.setState({ infinite: !infinite })}\n            />\n          </div>\n        </form>\n\n        <Carousel\n          images={images}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n          step={step}\n          infinite={infinite}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}